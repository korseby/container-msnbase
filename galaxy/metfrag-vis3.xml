<?xml version='1.0' encoding='UTF-8'?>
<tool id="metfrag-vis2" name="metfrag-vis2" version="3.0">
  <requirements>
    <container type="docker">korseby/msnbase</container>
  </requirements>
  <description>Generate a summary of MetFrag results</description>
  <stdio>
    <regex match="" source="stderr" level="warning" description="R messages" />
    <exit_code range="1:" level="fatal" description="Tool error" />
  </stdio>
  <command><![CDATA[
    cd /tmp;
    metfrag-vis.py -i $metfrag_vis_input -o /tmp/metfrag-vis.html -s -c -m $metfrag_vis_hits_limit 
    #if $metfrag_synonyms == "True"
        -s 
    #end if
    #if $metfrag_classyfire == "True"
        -c 
    #end if
    ;
    cd /tmp;
    mv /tmp/metfrag-vis.html $metfrag_vis_output;
  ]]>
  </command>
  <inputs>
    <param name="metfrag_vis_input" type="data" format="csv" multiple="False" optional="False" label="MetFrag result file(s)" />
    <param name="metfrag_vis_hits_limit" type="text" value="10" label="MetFrag Hits Limit" optional="False" help="Limit of candidate hits returned per compound" />
    <param name="metfrag_synonyms" type="select" value="True" optional="False" label="Synonyms" help="Fetch synonyms for each candidate from PubChem">
      <option value="True" selected="True">True</option>
      <option value="False">False</option>
    </param>
    <param name="metfrag_classyfire" type="select" value="True" optional="False" label="ClassyFire" help="Fetch compound classes for each candidate using ClassyFire">
      <option value="True" selected="True">True</option>
      <option value="False">False</option>
    </param>
  </inputs>
  <outputs>
    <data name="metfrag_vis_output" type="data" format="html" label="Summary HTML file(s)" />	
  </outputs>
  <help>

.. class:: infomark

| **Tool update: See the 'NEWS' section at the bottom of the page**

---------------------------------------------------

.. class:: infomark

**Authors**

| **Kristian Peters (kpeters@ipb-halle.de)** wrote and maintains this wrapper for the generation of a MetFrag summary file.

---------------------------------------------------

=====================
MetFrag-Visualization
=====================

-----------
Description
-----------

| This module is used generate a summary HTML file from a MetFrag result file. The results are usually generated by the **metfrag-cli-batch**. The generated HTML file includes the top most entries of each result CSV file including an image of the candidate and properties. Optionally, the previously generated parameter files can be used as input to create query URLs for the MetFrag-Web tool.

+-------------------+
| predecessor tool  |
+-------------------+
| metfrag-cli-batch |
+-------------------+

-----------
Input files
-----------

+------------------------------+--------+
| File                         | Format |
+==============================+========+
| 1)  MetFrag result file(s)   |  CSV   |
+------------------------------+--------+

----------
Parameters
----------

MetFrag result file(s)
        | Collection of CSV files containing MetFrag results generated by **metfrag-cli-batch-multiple**.
        |

MetFrag Synonyms
        | Fetch synonyms from Pubchem.
        |

MetFrag ClassyFire
        | Fetch compound classes using ClassyFire.
        |

------------
Output files
------------

+-------------------------------------+--------+
| Files                               | Format |
+=====================================+========+
| 1)  (Multiple) Summary HTML file(s) |  HTML  |
+-------------------------------------+--------+

---------------------------------------------------

-------
Changes
-------

Version: 3.0
| Complete re-implementation in Python

  </help>
</tool>
